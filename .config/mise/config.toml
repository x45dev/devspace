#
# FILE: .config/mise/config.toml
#
# DESCRIPTION:
# This is the central configuration file for the Mise tool manager. It defines the project's
# toolset and declaratively manages environment variables, including secrets.
#
# Version: 2025-09-11 22:45:00 AEST -> Updated 2025-09-15 14:10:00 AEST

# --- Env Configuration ---
#
# WHY: This section declaratively sets up the application environment. Mise
# loads these files in order. It has native SOPS support and will automatically
# decrypt `.env.sops.yaml` in memory before loading its variables.
#
# Optionally, use `tools = true` to add to $PATH *after* tools have defined env vars / sourced scripts;
#   eg. `_.path = { path = ["{{env.GEM_HOME}}/bin"], tools = true }`
#   eg. `_.source = { path = "my/env.sh", tools = true }
#
[env]

# WHY: This variable is the single source of truth for the location of the AGE
# key within the container's environment. It is referenced by `mise` tasks to
# ensure they can perform decryption. This isolates the application's knowledge
# of the key from the devcontainer's provisioning logic.
#
MISE_SOPS_AGE_KEY_FILE="{{config_root}}/.devcontainer/runtime/age.key"

_.file = [
    "{{config_root}}/.config/env/.env",
    { path = "{{config_root}}/.config/env/.env.sops.yaml", redact = true }
]

# Optionally add additional directories to $PATH
_.path = [
    "{{config_root}}/scripts"
]

# Optionally configure Python venv management
# _.python.venv = { path = ".venv", create = false, uv_create_args = ['--seed'] }

# --- Mise Configuration ---
[settings]
experimental = true
# sops.disable_git_check = true  # Use if your .git directory is outside the project root
# global_config_file = "config.toml"
# global_config_root = "~/.config/mise"
sops.rops = false

# --- Tasks ---
[task_config]
includes = [
    ".config/mise/tasks.toml",
    ".config/mise/tasks"
]

# --- Tools ---
#
# WHY: Defining tool versions here ensures every developer uses the exact same dependencies,
# eliminating "it works on my machine" problems. `mise install` will automatically
# provision these versions. Pinning to specific versions is critical for a stable,
# production-ready environment.
#
[tools]
age = "1.2.0"
bats = "1.11.0"
hadolint = "2.12.0"
jq = "1.7.1"
lefthook = "1.6.11"
node = "22.20.0"
"npm:markdown-link-check" = "3.13.7"
python = "3.13.7"
shellcheck = "0.10.0"
shfmt = "3.8.0"
sops = "3.8.1"
"ubi:zyedidia/micro" = "2.0.14"
uv = "0.1.45"
yq = "4.44.2"
