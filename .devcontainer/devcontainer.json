{
  "name": "AI-First Development Environment",
  "dockerComposeFile": "docker-compose.yml",
  "service": "trixie",
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

  // This sets the user that VS Code will connect as. This should match the
  // non-root user created in the Dockerfile.
  "remoteUser": "${localEnv:USERNAME}",

  // This section provides a consistent and productive out-of-the-box experience
  // by automatically installing necessary VS Code extensions and applying
  // project-specific settings.
  "customizations": {
    "vscode": {
      "extensions": [
        "charliermarsh.ruff",
        "EditorConfig.EditorConfig",
        "ms-azuretools.vscode-docker",
        "timonwong.shellcheck"
      ],
      "settings": {
        "editor.tabSize": 4,
        "editor.formatOnSave": true,
        "files.eol": "\n",
        "terminal.integrated.defaultProfile.linux": "bash",
        "python.terminal.activateEnvInCurrentTerminal": true,
        "[python]": {
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.codeActionsOnSave": {
            "source.fixAll": "always",
            "source.organizeImports": "always"
          }
        }
      }
    }
  },

  // These features add pre-configured tools to the dev container.
  "features": {
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {"moby":false},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers-extra/features/mise:1": {}
  },

  // These commands run at different points in the container lifecycle.
  "postCreateCommand": "/workspaces/${localWorkspaceFolderBasename}/.devcontainer/scripts/post-create.sh",
  "postAttachCommand": "/workspaces/${localWorkspaceFolderBasename}/.devcontainer/scripts/post-attach.sh",
  "postStartCommand": "/workspaces/${localWorkspaceFolderBasename}/.devcontainer/scripts/post-start.sh",

  "shutdownAction": "stopCompose"
}
